// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Settings/Master/Item/EggIncubatorAttributes.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Settings.Master.Item {

  /// <summary>Holder for reflection information generated from Settings/Master/Item/EggIncubatorAttributes.proto</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class EggIncubatorAttributesReflection {

    #region Descriptor
    /// <summary>File descriptor for Settings/Master/Item/EggIncubatorAttributes.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EggIncubatorAttributesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjFTZXR0aW5ncy9NYXN0ZXIvSXRlbS9FZ2dJbmN1YmF0b3JBdHRyaWJ1dGVz",
            "LnByb3RvEhRTZXR0aW5ncy5NYXN0ZXIuSXRlbRogSW52ZW50b3J5L0VnZ0lu",
            "Y3ViYXRvclR5cGUucHJvdG8ieAoWRWdnSW5jdWJhdG9yQXR0cmlidXRlcxIz",
            "Cg5pbmN1YmF0b3JfdHlwZRgBIAEoDjIbLkludmVudG9yeS5FZ2dJbmN1YmF0",
            "b3JUeXBlEgwKBHVzZXMYAiABKAUSGwoTZGlzdGFuY2VfbXVsdGlwbGllchgD",
            "IAEoAmIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Inventory.EggIncubatorTypeReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Settings.Master.Item.EggIncubatorAttributes), global::Settings.Master.Item.EggIncubatorAttributes.Parser, new[]{ "IncubatorType", "Uses", "DistanceMultiplier" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class EggIncubatorAttributes : pb::IMessage<EggIncubatorAttributes> {
    private static readonly pb::MessageParser<EggIncubatorAttributes> _parser = new pb::MessageParser<EggIncubatorAttributes>(() => new EggIncubatorAttributes());
    public static pb::MessageParser<EggIncubatorAttributes> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Settings.Master.Item.EggIncubatorAttributesReflection.Descriptor.MessageTypes[0]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public EggIncubatorAttributes() {
      OnConstruction();
    }

    partial void OnConstruction();

    public EggIncubatorAttributes(EggIncubatorAttributes other) : this() {
      incubatorType_ = other.incubatorType_;
      uses_ = other.uses_;
      distanceMultiplier_ = other.distanceMultiplier_;
    }

    public EggIncubatorAttributes Clone() {
      return new EggIncubatorAttributes(this);
    }

    /// <summary>Field number for the "incubator_type" field.</summary>
    public const int IncubatorTypeFieldNumber = 1;
    private global::Inventory.EggIncubatorType incubatorType_ = 0;
    public global::Inventory.EggIncubatorType IncubatorType {
      get { return incubatorType_; }
      set {
        incubatorType_ = value;
      }
    }

    /// <summary>Field number for the "uses" field.</summary>
    public const int UsesFieldNumber = 2;
    private int uses_;
    public int Uses {
      get { return uses_; }
      set {
        uses_ = value;
      }
    }

    /// <summary>Field number for the "distance_multiplier" field.</summary>
    public const int DistanceMultiplierFieldNumber = 3;
    private float distanceMultiplier_;
    public float DistanceMultiplier {
      get { return distanceMultiplier_; }
      set {
        distanceMultiplier_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as EggIncubatorAttributes);
    }

    public bool Equals(EggIncubatorAttributes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IncubatorType != other.IncubatorType) return false;
      if (Uses != other.Uses) return false;
      if (DistanceMultiplier != other.DistanceMultiplier) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (IncubatorType != 0) hash ^= IncubatorType.GetHashCode();
      if (Uses != 0) hash ^= Uses.GetHashCode();
      if (DistanceMultiplier != 0F) hash ^= DistanceMultiplier.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (IncubatorType != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) IncubatorType);
      }
      if (Uses != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Uses);
      }
      if (DistanceMultiplier != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(DistanceMultiplier);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (IncubatorType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) IncubatorType);
      }
      if (Uses != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Uses);
      }
      if (DistanceMultiplier != 0F) {
        size += 1 + 4;
      }
      return size;
    }

    public void MergeFrom(EggIncubatorAttributes other) {
      if (other == null) {
        return;
      }
      if (other.IncubatorType != 0) {
        IncubatorType = other.IncubatorType;
      }
      if (other.Uses != 0) {
        Uses = other.Uses;
      }
      if (other.DistanceMultiplier != 0F) {
        DistanceMultiplier = other.DistanceMultiplier;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            incubatorType_ = (global::Inventory.EggIncubatorType) input.ReadEnum();
            break;
          }
          case 16: {
            Uses = input.ReadInt32();
            break;
          }
          case 29: {
            DistanceMultiplier = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
