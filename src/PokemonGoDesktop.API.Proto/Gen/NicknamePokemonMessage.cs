// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Networking/Requests/Messages/NicknamePokemonMessage.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace PokemonGoDesktop.API.Proto {

  /// <summary>Holder for reflection information generated from Networking/Requests/Messages/NicknamePokemonMessage.proto</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class NicknamePokemonMessageReflection {

    #region Descriptor
    /// <summary>File descriptor for Networking/Requests/Messages/NicknamePokemonMessage.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static NicknamePokemonMessageReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjlOZXR3b3JraW5nL1JlcXVlc3RzL01lc3NhZ2VzL05pY2tuYW1lUG9rZW1v",
            "bk1lc3NhZ2UucHJvdG8SHE5ldHdvcmtpbmcuUmVxdWVzdHMuTWVzc2FnZXMi",
            "PgoWTmlja25hbWVQb2tlbW9uTWVzc2FnZRISCgpwb2tlbW9uX2lkGAEgASgG",
            "EhAKCG5pY2tuYW1lGAIgASgJQh2qAhpQb2tlbW9uR29EZXNrdG9wLkFQSS5Q",
            "cm90b2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::PokemonGoDesktop.API.Proto.NicknamePokemonMessage), global::PokemonGoDesktop.API.Proto.NicknamePokemonMessage.Parser, new[]{ "PokemonId", "Nickname" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class NicknamePokemonMessage : pb::IMessage<NicknamePokemonMessage> {
    private static readonly pb::MessageParser<NicknamePokemonMessage> _parser = new pb::MessageParser<NicknamePokemonMessage>(() => new NicknamePokemonMessage());
    public static pb::MessageParser<NicknamePokemonMessage> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::PokemonGoDesktop.API.Proto.NicknamePokemonMessageReflection.Descriptor.MessageTypes[0]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public NicknamePokemonMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    public NicknamePokemonMessage(NicknamePokemonMessage other) : this() {
      pokemonId_ = other.pokemonId_;
      nickname_ = other.nickname_;
    }

    public NicknamePokemonMessage Clone() {
      return new NicknamePokemonMessage(this);
    }

    /// <summary>Field number for the "pokemon_id" field.</summary>
    public const int PokemonIdFieldNumber = 1;
    private ulong pokemonId_;
    public ulong PokemonId {
      get { return pokemonId_; }
      set {
        pokemonId_ = value;
      }
    }

    /// <summary>Field number for the "nickname" field.</summary>
    public const int NicknameFieldNumber = 2;
    private string nickname_ = "";
    public string Nickname {
      get { return nickname_; }
      set {
        nickname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    public override bool Equals(object other) {
      return Equals(other as NicknamePokemonMessage);
    }

    public bool Equals(NicknamePokemonMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PokemonId != other.PokemonId) return false;
      if (Nickname != other.Nickname) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (PokemonId != 0UL) hash ^= PokemonId.GetHashCode();
      if (Nickname.Length != 0) hash ^= Nickname.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (PokemonId != 0UL) {
        output.WriteRawTag(9);
        output.WriteFixed64(PokemonId);
      }
      if (Nickname.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Nickname);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (PokemonId != 0UL) {
        size += 1 + 8;
      }
      if (Nickname.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Nickname);
      }
      return size;
    }

    public void MergeFrom(NicknamePokemonMessage other) {
      if (other == null) {
        return;
      }
      if (other.PokemonId != 0UL) {
        PokemonId = other.PokemonId;
      }
      if (other.Nickname.Length != 0) {
        Nickname = other.Nickname;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 9: {
            PokemonId = input.ReadFixed64();
            break;
          }
          case 18: {
            Nickname = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
