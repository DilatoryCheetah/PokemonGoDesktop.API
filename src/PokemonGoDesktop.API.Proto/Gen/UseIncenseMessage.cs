// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Networking/Requests/Messages/UseIncenseMessage.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace PokemonGoDesktop.API.Proto {

  /// <summary>Holder for reflection information generated from Networking/Requests/Messages/UseIncenseMessage.proto</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class UseIncenseMessageReflection {

    #region Descriptor
    /// <summary>File descriptor for Networking/Requests/Messages/UseIncenseMessage.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static UseIncenseMessageReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjROZXR3b3JraW5nL1JlcXVlc3RzL01lc3NhZ2VzL1VzZUluY2Vuc2VNZXNz",
            "YWdlLnByb3RvEhxOZXR3b3JraW5nLlJlcXVlc3RzLk1lc3NhZ2VzGhtJbnZl",
            "bnRvcnkvSXRlbS9JdGVtSWQucHJvdG8iQQoRVXNlSW5jZW5zZU1lc3NhZ2US",
            "LAoMaW5jZW5zZV90eXBlGAEgASgOMhYuSW52ZW50b3J5Lkl0ZW0uSXRlbUlk",
            "Qh2qAhpQb2tlbW9uR29EZXNrdG9wLkFQSS5Qcm90b2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::PokemonGoDesktop.API.Proto.ItemIdReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::PokemonGoDesktop.API.Proto.UseIncenseMessage), global::PokemonGoDesktop.API.Proto.UseIncenseMessage.Parser, new[]{ "IncenseType" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class UseIncenseMessage : pb::IMessage<UseIncenseMessage> {
    private static readonly pb::MessageParser<UseIncenseMessage> _parser = new pb::MessageParser<UseIncenseMessage>(() => new UseIncenseMessage());
    public static pb::MessageParser<UseIncenseMessage> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::PokemonGoDesktop.API.Proto.UseIncenseMessageReflection.Descriptor.MessageTypes[0]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public UseIncenseMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    public UseIncenseMessage(UseIncenseMessage other) : this() {
      incenseType_ = other.incenseType_;
    }

    public UseIncenseMessage Clone() {
      return new UseIncenseMessage(this);
    }

    /// <summary>Field number for the "incense_type" field.</summary>
    public const int IncenseTypeFieldNumber = 1;
    private global::PokemonGoDesktop.API.Proto.ItemId incenseType_ = 0;
    public global::PokemonGoDesktop.API.Proto.ItemId IncenseType {
      get { return incenseType_; }
      set {
        incenseType_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as UseIncenseMessage);
    }

    public bool Equals(UseIncenseMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IncenseType != other.IncenseType) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (IncenseType != 0) hash ^= IncenseType.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (IncenseType != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) IncenseType);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (IncenseType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) IncenseType);
      }
      return size;
    }

    public void MergeFrom(UseIncenseMessage other) {
      if (other == null) {
        return;
      }
      if (other.IncenseType != 0) {
        IncenseType = other.IncenseType;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            incenseType_ = (global::PokemonGoDesktop.API.Proto.ItemId) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
