// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Networking/Responses/GetIncensePokemonResponse.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace PokemonGoDesktop.API.Proto {

  /// <summary>Holder for reflection information generated from Networking/Responses/GetIncensePokemonResponse.proto</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class GetIncensePokemonResponseReflection {

    #region Descriptor
    /// <summary>File descriptor for Networking/Responses/GetIncensePokemonResponse.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GetIncensePokemonResponseReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjROZXR3b3JraW5nL1Jlc3BvbnNlcy9HZXRJbmNlbnNlUG9rZW1vblJlc3Bv",
            "bnNlLnByb3RvEhROZXR3b3JraW5nLlJlc3BvbnNlcyLiAgoZR2V0SW5jZW5z",
            "ZVBva2Vtb25SZXNwb25zZRJGCgZyZXN1bHQYASABKA4yNi5OZXR3b3JraW5n",
            "LlJlc3BvbnNlcy5HZXRJbmNlbnNlUG9rZW1vblJlc3BvbnNlLlJlc3VsdBIX",
            "Cg9wb2tlbW9uX3R5cGVfaWQYAiABKAUSEAoIbGF0aXR1ZGUYAyABKAESEQoJ",
            "bG9uZ2l0dWRlGAQgASgBEhoKEmVuY291bnRlcl9sb2NhdGlvbhgFIAEoCRIU",
            "CgxlbmNvdW50ZXJfaWQYBiABKAQSHgoWZGlzYXBwZWFyX3RpbWVzdGFtcF9t",
            "cxgHIAEoAyJtCgZSZXN1bHQSHQoZSU5DRU5TRV9FTkNPVU5URVJfVU5LTk9X",
            "ThAAEh8KG0lOQ0VOU0VfRU5DT1VOVEVSX0FWQUlMQUJMRRABEiMKH0lOQ0VO",
            "U0VfRU5DT1VOVEVSX05PVF9BVkFJTEFCTEUQAkIdqgIaUG9rZW1vbkdvRGVz",
            "a3RvcC5BUEkuUHJvdG9iBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::PokemonGoDesktop.API.Proto.GetIncensePokemonResponse), global::PokemonGoDesktop.API.Proto.GetIncensePokemonResponse.Parser, new[]{ "Result", "PokemonTypeId", "Latitude", "Longitude", "EncounterLocation", "EncounterId", "DisappearTimestampMs" }, null, new[]{ typeof(global::PokemonGoDesktop.API.Proto.GetIncensePokemonResponse.Types.Result) }, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GetIncensePokemonResponse : pb::IMessage<GetIncensePokemonResponse> {
    private static readonly pb::MessageParser<GetIncensePokemonResponse> _parser = new pb::MessageParser<GetIncensePokemonResponse>(() => new GetIncensePokemonResponse());
    public static pb::MessageParser<GetIncensePokemonResponse> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::PokemonGoDesktop.API.Proto.GetIncensePokemonResponseReflection.Descriptor.MessageTypes[0]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public GetIncensePokemonResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    public GetIncensePokemonResponse(GetIncensePokemonResponse other) : this() {
      result_ = other.result_;
      pokemonTypeId_ = other.pokemonTypeId_;
      latitude_ = other.latitude_;
      longitude_ = other.longitude_;
      encounterLocation_ = other.encounterLocation_;
      encounterId_ = other.encounterId_;
      disappearTimestampMs_ = other.disappearTimestampMs_;
    }

    public GetIncensePokemonResponse Clone() {
      return new GetIncensePokemonResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private global::PokemonGoDesktop.API.Proto.GetIncensePokemonResponse.Types.Result result_ = 0;
    public global::PokemonGoDesktop.API.Proto.GetIncensePokemonResponse.Types.Result Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "pokemon_type_id" field.</summary>
    public const int PokemonTypeIdFieldNumber = 2;
    private int pokemonTypeId_;
    /// <summary>
    ///  TODO: PokemonType.proto or PokemonId.proto
    /// </summary>
    public int PokemonTypeId {
      get { return pokemonTypeId_; }
      set {
        pokemonTypeId_ = value;
      }
    }

    /// <summary>Field number for the "latitude" field.</summary>
    public const int LatitudeFieldNumber = 3;
    private double latitude_;
    public double Latitude {
      get { return latitude_; }
      set {
        latitude_ = value;
      }
    }

    /// <summary>Field number for the "longitude" field.</summary>
    public const int LongitudeFieldNumber = 4;
    private double longitude_;
    public double Longitude {
      get { return longitude_; }
      set {
        longitude_ = value;
      }
    }

    /// <summary>Field number for the "encounter_location" field.</summary>
    public const int EncounterLocationFieldNumber = 5;
    private string encounterLocation_ = "";
    public string EncounterLocation {
      get { return encounterLocation_; }
      set {
        encounterLocation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "encounter_id" field.</summary>
    public const int EncounterIdFieldNumber = 6;
    private ulong encounterId_;
    public ulong EncounterId {
      get { return encounterId_; }
      set {
        encounterId_ = value;
      }
    }

    /// <summary>Field number for the "disappear_timestamp_ms" field.</summary>
    public const int DisappearTimestampMsFieldNumber = 7;
    private long disappearTimestampMs_;
    public long DisappearTimestampMs {
      get { return disappearTimestampMs_; }
      set {
        disappearTimestampMs_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as GetIncensePokemonResponse);
    }

    public bool Equals(GetIncensePokemonResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (PokemonTypeId != other.PokemonTypeId) return false;
      if (Latitude != other.Latitude) return false;
      if (Longitude != other.Longitude) return false;
      if (EncounterLocation != other.EncounterLocation) return false;
      if (EncounterId != other.EncounterId) return false;
      if (DisappearTimestampMs != other.DisappearTimestampMs) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      if (PokemonTypeId != 0) hash ^= PokemonTypeId.GetHashCode();
      if (Latitude != 0D) hash ^= Latitude.GetHashCode();
      if (Longitude != 0D) hash ^= Longitude.GetHashCode();
      if (EncounterLocation.Length != 0) hash ^= EncounterLocation.GetHashCode();
      if (EncounterId != 0UL) hash ^= EncounterId.GetHashCode();
      if (DisappearTimestampMs != 0L) hash ^= DisappearTimestampMs.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      if (PokemonTypeId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PokemonTypeId);
      }
      if (Latitude != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(Latitude);
      }
      if (Longitude != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(Longitude);
      }
      if (EncounterLocation.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(EncounterLocation);
      }
      if (EncounterId != 0UL) {
        output.WriteRawTag(48);
        output.WriteUInt64(EncounterId);
      }
      if (DisappearTimestampMs != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(DisappearTimestampMs);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      if (PokemonTypeId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PokemonTypeId);
      }
      if (Latitude != 0D) {
        size += 1 + 8;
      }
      if (Longitude != 0D) {
        size += 1 + 8;
      }
      if (EncounterLocation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EncounterLocation);
      }
      if (EncounterId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(EncounterId);
      }
      if (DisappearTimestampMs != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(DisappearTimestampMs);
      }
      return size;
    }

    public void MergeFrom(GetIncensePokemonResponse other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
      if (other.PokemonTypeId != 0) {
        PokemonTypeId = other.PokemonTypeId;
      }
      if (other.Latitude != 0D) {
        Latitude = other.Latitude;
      }
      if (other.Longitude != 0D) {
        Longitude = other.Longitude;
      }
      if (other.EncounterLocation.Length != 0) {
        EncounterLocation = other.EncounterLocation;
      }
      if (other.EncounterId != 0UL) {
        EncounterId = other.EncounterId;
      }
      if (other.DisappearTimestampMs != 0L) {
        DisappearTimestampMs = other.DisappearTimestampMs;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            result_ = (global::PokemonGoDesktop.API.Proto.GetIncensePokemonResponse.Types.Result) input.ReadEnum();
            break;
          }
          case 16: {
            PokemonTypeId = input.ReadInt32();
            break;
          }
          case 25: {
            Latitude = input.ReadDouble();
            break;
          }
          case 33: {
            Longitude = input.ReadDouble();
            break;
          }
          case 42: {
            EncounterLocation = input.ReadString();
            break;
          }
          case 48: {
            EncounterId = input.ReadUInt64();
            break;
          }
          case 56: {
            DisappearTimestampMs = input.ReadInt64();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the GetIncensePokemonResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum Result {
        [pbr::OriginalName("INCENSE_ENCOUNTER_UNKNOWN")] IncenseEncounterUnknown = 0,
        [pbr::OriginalName("INCENSE_ENCOUNTER_AVAILABLE")] IncenseEncounterAvailable = 1,
        [pbr::OriginalName("INCENSE_ENCOUNTER_NOT_AVAILABLE")] IncenseEncounterNotAvailable = 2,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
