// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Map/Pokemon/WildPokemon.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Map.Pokemon {

  /// <summary>Holder for reflection information generated from Map/Pokemon/WildPokemon.proto</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class WildPokemonReflection {

    #region Descriptor
    /// <summary>File descriptor for Map/Pokemon/WildPokemon.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static WildPokemonReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch1NYXAvUG9rZW1vbi9XaWxkUG9rZW1vbi5wcm90bxILTWFwLlBva2Vtb24a",
            "FkRhdGEvUG9rZW1vbkRhdGEucHJvdG8iygEKC1dpbGRQb2tlbW9uEhQKDGVu",
            "Y291bnRlcl9pZBgBIAEoBhIiChpsYXN0X21vZGlmaWVkX3RpbWVzdGFtcF9t",
            "cxgCIAEoAxIQCghsYXRpdHVkZRgDIAEoARIRCglsb25naXR1ZGUYBCABKAES",
            "FgoOc3Bhd25fcG9pbnRfaWQYBSABKAkSJwoMcG9rZW1vbl9kYXRhGAcgASgL",
            "MhEuRGF0YS5Qb2tlbW9uRGF0YRIbChN0aW1lX3RpbGxfaGlkZGVuX21zGAsg",
            "ASgFYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Data.PokemonDataReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Map.Pokemon.WildPokemon), global::Map.Pokemon.WildPokemon.Parser, new[]{ "EncounterId", "LastModifiedTimestampMs", "Latitude", "Longitude", "SpawnPointId", "PokemonData", "TimeTillHiddenMs" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class WildPokemon : pb::IMessage<WildPokemon> {
    private static readonly pb::MessageParser<WildPokemon> _parser = new pb::MessageParser<WildPokemon>(() => new WildPokemon());
    public static pb::MessageParser<WildPokemon> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Map.Pokemon.WildPokemonReflection.Descriptor.MessageTypes[0]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public WildPokemon() {
      OnConstruction();
    }

    partial void OnConstruction();

    public WildPokemon(WildPokemon other) : this() {
      encounterId_ = other.encounterId_;
      lastModifiedTimestampMs_ = other.lastModifiedTimestampMs_;
      latitude_ = other.latitude_;
      longitude_ = other.longitude_;
      spawnPointId_ = other.spawnPointId_;
      PokemonData = other.pokemonData_ != null ? other.PokemonData.Clone() : null;
      timeTillHiddenMs_ = other.timeTillHiddenMs_;
    }

    public WildPokemon Clone() {
      return new WildPokemon(this);
    }

    /// <summary>Field number for the "encounter_id" field.</summary>
    public const int EncounterIdFieldNumber = 1;
    private ulong encounterId_;
    public ulong EncounterId {
      get { return encounterId_; }
      set {
        encounterId_ = value;
      }
    }

    /// <summary>Field number for the "last_modified_timestamp_ms" field.</summary>
    public const int LastModifiedTimestampMsFieldNumber = 2;
    private long lastModifiedTimestampMs_;
    public long LastModifiedTimestampMs {
      get { return lastModifiedTimestampMs_; }
      set {
        lastModifiedTimestampMs_ = value;
      }
    }

    /// <summary>Field number for the "latitude" field.</summary>
    public const int LatitudeFieldNumber = 3;
    private double latitude_;
    public double Latitude {
      get { return latitude_; }
      set {
        latitude_ = value;
      }
    }

    /// <summary>Field number for the "longitude" field.</summary>
    public const int LongitudeFieldNumber = 4;
    private double longitude_;
    public double Longitude {
      get { return longitude_; }
      set {
        longitude_ = value;
      }
    }

    /// <summary>Field number for the "spawn_point_id" field.</summary>
    public const int SpawnPointIdFieldNumber = 5;
    private string spawnPointId_ = "";
    public string SpawnPointId {
      get { return spawnPointId_; }
      set {
        spawnPointId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "pokemon_data" field.</summary>
    public const int PokemonDataFieldNumber = 7;
    private global::Data.PokemonData pokemonData_;
    public global::Data.PokemonData PokemonData {
      get { return pokemonData_; }
      set {
        pokemonData_ = value;
      }
    }

    /// <summary>Field number for the "time_till_hidden_ms" field.</summary>
    public const int TimeTillHiddenMsFieldNumber = 11;
    private int timeTillHiddenMs_;
    public int TimeTillHiddenMs {
      get { return timeTillHiddenMs_; }
      set {
        timeTillHiddenMs_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as WildPokemon);
    }

    public bool Equals(WildPokemon other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EncounterId != other.EncounterId) return false;
      if (LastModifiedTimestampMs != other.LastModifiedTimestampMs) return false;
      if (Latitude != other.Latitude) return false;
      if (Longitude != other.Longitude) return false;
      if (SpawnPointId != other.SpawnPointId) return false;
      if (!object.Equals(PokemonData, other.PokemonData)) return false;
      if (TimeTillHiddenMs != other.TimeTillHiddenMs) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (EncounterId != 0UL) hash ^= EncounterId.GetHashCode();
      if (LastModifiedTimestampMs != 0L) hash ^= LastModifiedTimestampMs.GetHashCode();
      if (Latitude != 0D) hash ^= Latitude.GetHashCode();
      if (Longitude != 0D) hash ^= Longitude.GetHashCode();
      if (SpawnPointId.Length != 0) hash ^= SpawnPointId.GetHashCode();
      if (pokemonData_ != null) hash ^= PokemonData.GetHashCode();
      if (TimeTillHiddenMs != 0) hash ^= TimeTillHiddenMs.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (EncounterId != 0UL) {
        output.WriteRawTag(9);
        output.WriteFixed64(EncounterId);
      }
      if (LastModifiedTimestampMs != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(LastModifiedTimestampMs);
      }
      if (Latitude != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(Latitude);
      }
      if (Longitude != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(Longitude);
      }
      if (SpawnPointId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(SpawnPointId);
      }
      if (pokemonData_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(PokemonData);
      }
      if (TimeTillHiddenMs != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(TimeTillHiddenMs);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (EncounterId != 0UL) {
        size += 1 + 8;
      }
      if (LastModifiedTimestampMs != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LastModifiedTimestampMs);
      }
      if (Latitude != 0D) {
        size += 1 + 8;
      }
      if (Longitude != 0D) {
        size += 1 + 8;
      }
      if (SpawnPointId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SpawnPointId);
      }
      if (pokemonData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PokemonData);
      }
      if (TimeTillHiddenMs != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TimeTillHiddenMs);
      }
      return size;
    }

    public void MergeFrom(WildPokemon other) {
      if (other == null) {
        return;
      }
      if (other.EncounterId != 0UL) {
        EncounterId = other.EncounterId;
      }
      if (other.LastModifiedTimestampMs != 0L) {
        LastModifiedTimestampMs = other.LastModifiedTimestampMs;
      }
      if (other.Latitude != 0D) {
        Latitude = other.Latitude;
      }
      if (other.Longitude != 0D) {
        Longitude = other.Longitude;
      }
      if (other.SpawnPointId.Length != 0) {
        SpawnPointId = other.SpawnPointId;
      }
      if (other.pokemonData_ != null) {
        if (pokemonData_ == null) {
          pokemonData_ = new global::Data.PokemonData();
        }
        PokemonData.MergeFrom(other.PokemonData);
      }
      if (other.TimeTillHiddenMs != 0) {
        TimeTillHiddenMs = other.TimeTillHiddenMs;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 9: {
            EncounterId = input.ReadFixed64();
            break;
          }
          case 16: {
            LastModifiedTimestampMs = input.ReadInt64();
            break;
          }
          case 25: {
            Latitude = input.ReadDouble();
            break;
          }
          case 33: {
            Longitude = input.ReadDouble();
            break;
          }
          case 42: {
            SpawnPointId = input.ReadString();
            break;
          }
          case 58: {
            if (pokemonData_ == null) {
              pokemonData_ = new global::Data.PokemonData();
            }
            input.ReadMessage(pokemonData_);
            break;
          }
          case 88: {
            TimeTillHiddenMs = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
