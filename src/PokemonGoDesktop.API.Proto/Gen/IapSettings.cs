// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Settings/Master/IapSettings.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace PokemonGoDesktop.API.Proto {

  /// <summary>Holder for reflection information generated from Settings/Master/IapSettings.proto</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class IapSettingsReflection {

    #region Descriptor
    /// <summary>File descriptor for Settings/Master/IapSettings.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static IapSettingsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiFTZXR0aW5ncy9NYXN0ZXIvSWFwU2V0dGluZ3MucHJvdG8SD1NldHRpbmdz",
            "Lk1hc3RlciKMAgoLSWFwU2V0dGluZ3MSGQoRZGFpbHlfYm9udXNfY29pbnMY",
            "ASABKAUSKAogZGFpbHlfZGVmZW5kZXJfYm9udXNfcGVyX3Bva2Vtb24YAiAD",
            "KAUSKgoiZGFpbHlfZGVmZW5kZXJfYm9udXNfbWF4X2RlZmVuZGVycxgDIAEo",
            "BRIlCh1kYWlseV9kZWZlbmRlcl9ib251c19jdXJyZW5jeRgEIAMoCRIiChpt",
            "aW5fdGltZV9iZXR3ZWVuX2NsYWltc19tcxgFIAEoAxIbChNkYWlseV9ib251",
            "c19lbmFibGVkGAYgASgIEiQKHGRhaWx5X2RlZmVuZGVyX2JvbnVzX2VuYWJs",
            "ZWQYByABKAhCHaoCGlBva2Vtb25Hb0Rlc2t0b3AuQVBJLlByb3RvYgZwcm90",
            "bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::PokemonGoDesktop.API.Proto.IapSettings), global::PokemonGoDesktop.API.Proto.IapSettings.Parser, new[]{ "DailyBonusCoins", "DailyDefenderBonusPerPokemon", "DailyDefenderBonusMaxDefenders", "DailyDefenderBonusCurrency", "MinTimeBetweenClaimsMs", "DailyBonusEnabled", "DailyDefenderBonusEnabled" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class IapSettings : pb::IMessage<IapSettings> {
    private static readonly pb::MessageParser<IapSettings> _parser = new pb::MessageParser<IapSettings>(() => new IapSettings());
    public static pb::MessageParser<IapSettings> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::PokemonGoDesktop.API.Proto.IapSettingsReflection.Descriptor.MessageTypes[0]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public IapSettings() {
      OnConstruction();
    }

    partial void OnConstruction();

    public IapSettings(IapSettings other) : this() {
      dailyBonusCoins_ = other.dailyBonusCoins_;
      dailyDefenderBonusPerPokemon_ = other.dailyDefenderBonusPerPokemon_.Clone();
      dailyDefenderBonusMaxDefenders_ = other.dailyDefenderBonusMaxDefenders_;
      dailyDefenderBonusCurrency_ = other.dailyDefenderBonusCurrency_.Clone();
      minTimeBetweenClaimsMs_ = other.minTimeBetweenClaimsMs_;
      dailyBonusEnabled_ = other.dailyBonusEnabled_;
      dailyDefenderBonusEnabled_ = other.dailyDefenderBonusEnabled_;
    }

    public IapSettings Clone() {
      return new IapSettings(this);
    }

    /// <summary>Field number for the "daily_bonus_coins" field.</summary>
    public const int DailyBonusCoinsFieldNumber = 1;
    private int dailyBonusCoins_;
    public int DailyBonusCoins {
      get { return dailyBonusCoins_; }
      set {
        dailyBonusCoins_ = value;
      }
    }

    /// <summary>Field number for the "daily_defender_bonus_per_pokemon" field.</summary>
    public const int DailyDefenderBonusPerPokemonFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_dailyDefenderBonusPerPokemon_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> dailyDefenderBonusPerPokemon_ = new pbc::RepeatedField<int>();
    public pbc::RepeatedField<int> DailyDefenderBonusPerPokemon {
      get { return dailyDefenderBonusPerPokemon_; }
    }

    /// <summary>Field number for the "daily_defender_bonus_max_defenders" field.</summary>
    public const int DailyDefenderBonusMaxDefendersFieldNumber = 3;
    private int dailyDefenderBonusMaxDefenders_;
    public int DailyDefenderBonusMaxDefenders {
      get { return dailyDefenderBonusMaxDefenders_; }
      set {
        dailyDefenderBonusMaxDefenders_ = value;
      }
    }

    /// <summary>Field number for the "daily_defender_bonus_currency" field.</summary>
    public const int DailyDefenderBonusCurrencyFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_dailyDefenderBonusCurrency_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> dailyDefenderBonusCurrency_ = new pbc::RepeatedField<string>();
    public pbc::RepeatedField<string> DailyDefenderBonusCurrency {
      get { return dailyDefenderBonusCurrency_; }
    }

    /// <summary>Field number for the "min_time_between_claims_ms" field.</summary>
    public const int MinTimeBetweenClaimsMsFieldNumber = 5;
    private long minTimeBetweenClaimsMs_;
    public long MinTimeBetweenClaimsMs {
      get { return minTimeBetweenClaimsMs_; }
      set {
        minTimeBetweenClaimsMs_ = value;
      }
    }

    /// <summary>Field number for the "daily_bonus_enabled" field.</summary>
    public const int DailyBonusEnabledFieldNumber = 6;
    private bool dailyBonusEnabled_;
    public bool DailyBonusEnabled {
      get { return dailyBonusEnabled_; }
      set {
        dailyBonusEnabled_ = value;
      }
    }

    /// <summary>Field number for the "daily_defender_bonus_enabled" field.</summary>
    public const int DailyDefenderBonusEnabledFieldNumber = 7;
    private bool dailyDefenderBonusEnabled_;
    public bool DailyDefenderBonusEnabled {
      get { return dailyDefenderBonusEnabled_; }
      set {
        dailyDefenderBonusEnabled_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as IapSettings);
    }

    public bool Equals(IapSettings other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DailyBonusCoins != other.DailyBonusCoins) return false;
      if(!dailyDefenderBonusPerPokemon_.Equals(other.dailyDefenderBonusPerPokemon_)) return false;
      if (DailyDefenderBonusMaxDefenders != other.DailyDefenderBonusMaxDefenders) return false;
      if(!dailyDefenderBonusCurrency_.Equals(other.dailyDefenderBonusCurrency_)) return false;
      if (MinTimeBetweenClaimsMs != other.MinTimeBetweenClaimsMs) return false;
      if (DailyBonusEnabled != other.DailyBonusEnabled) return false;
      if (DailyDefenderBonusEnabled != other.DailyDefenderBonusEnabled) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (DailyBonusCoins != 0) hash ^= DailyBonusCoins.GetHashCode();
      hash ^= dailyDefenderBonusPerPokemon_.GetHashCode();
      if (DailyDefenderBonusMaxDefenders != 0) hash ^= DailyDefenderBonusMaxDefenders.GetHashCode();
      hash ^= dailyDefenderBonusCurrency_.GetHashCode();
      if (MinTimeBetweenClaimsMs != 0L) hash ^= MinTimeBetweenClaimsMs.GetHashCode();
      if (DailyBonusEnabled != false) hash ^= DailyBonusEnabled.GetHashCode();
      if (DailyDefenderBonusEnabled != false) hash ^= DailyDefenderBonusEnabled.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (DailyBonusCoins != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(DailyBonusCoins);
      }
      dailyDefenderBonusPerPokemon_.WriteTo(output, _repeated_dailyDefenderBonusPerPokemon_codec);
      if (DailyDefenderBonusMaxDefenders != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(DailyDefenderBonusMaxDefenders);
      }
      dailyDefenderBonusCurrency_.WriteTo(output, _repeated_dailyDefenderBonusCurrency_codec);
      if (MinTimeBetweenClaimsMs != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(MinTimeBetweenClaimsMs);
      }
      if (DailyBonusEnabled != false) {
        output.WriteRawTag(48);
        output.WriteBool(DailyBonusEnabled);
      }
      if (DailyDefenderBonusEnabled != false) {
        output.WriteRawTag(56);
        output.WriteBool(DailyDefenderBonusEnabled);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (DailyBonusCoins != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DailyBonusCoins);
      }
      size += dailyDefenderBonusPerPokemon_.CalculateSize(_repeated_dailyDefenderBonusPerPokemon_codec);
      if (DailyDefenderBonusMaxDefenders != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DailyDefenderBonusMaxDefenders);
      }
      size += dailyDefenderBonusCurrency_.CalculateSize(_repeated_dailyDefenderBonusCurrency_codec);
      if (MinTimeBetweenClaimsMs != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MinTimeBetweenClaimsMs);
      }
      if (DailyBonusEnabled != false) {
        size += 1 + 1;
      }
      if (DailyDefenderBonusEnabled != false) {
        size += 1 + 1;
      }
      return size;
    }

    public void MergeFrom(IapSettings other) {
      if (other == null) {
        return;
      }
      if (other.DailyBonusCoins != 0) {
        DailyBonusCoins = other.DailyBonusCoins;
      }
      dailyDefenderBonusPerPokemon_.Add(other.dailyDefenderBonusPerPokemon_);
      if (other.DailyDefenderBonusMaxDefenders != 0) {
        DailyDefenderBonusMaxDefenders = other.DailyDefenderBonusMaxDefenders;
      }
      dailyDefenderBonusCurrency_.Add(other.dailyDefenderBonusCurrency_);
      if (other.MinTimeBetweenClaimsMs != 0L) {
        MinTimeBetweenClaimsMs = other.MinTimeBetweenClaimsMs;
      }
      if (other.DailyBonusEnabled != false) {
        DailyBonusEnabled = other.DailyBonusEnabled;
      }
      if (other.DailyDefenderBonusEnabled != false) {
        DailyDefenderBonusEnabled = other.DailyDefenderBonusEnabled;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            DailyBonusCoins = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            dailyDefenderBonusPerPokemon_.AddEntriesFrom(input, _repeated_dailyDefenderBonusPerPokemon_codec);
            break;
          }
          case 24: {
            DailyDefenderBonusMaxDefenders = input.ReadInt32();
            break;
          }
          case 34: {
            dailyDefenderBonusCurrency_.AddEntriesFrom(input, _repeated_dailyDefenderBonusCurrency_codec);
            break;
          }
          case 40: {
            MinTimeBetweenClaimsMs = input.ReadInt64();
            break;
          }
          case 48: {
            DailyBonusEnabled = input.ReadBool();
            break;
          }
          case 56: {
            DailyDefenderBonusEnabled = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
