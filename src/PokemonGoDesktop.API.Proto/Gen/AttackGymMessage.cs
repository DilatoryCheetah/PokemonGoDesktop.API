// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Networking/Requests/Messages/AttackGymMessage.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Networking.Requests.Messages {

  /// <summary>Holder for reflection information generated from Networking/Requests/Messages/AttackGymMessage.proto</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class AttackGymMessageReflection {

    #region Descriptor
    /// <summary>File descriptor for Networking/Requests/Messages/AttackGymMessage.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AttackGymMessageReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjNOZXR3b3JraW5nL1JlcXVlc3RzL01lc3NhZ2VzL0F0dGFja0d5bU1lc3Nh",
            "Z2UucHJvdG8SHE5ldHdvcmtpbmcuUmVxdWVzdHMuTWVzc2FnZXMaHkRhdGEv",
            "QmF0dGxlL0JhdHRsZUFjdGlvbi5wcm90byLWAQoQQXR0YWNrR3ltTWVzc2Fn",
            "ZRIOCgZneW1faWQYASABKAkSEQoJYmF0dGxlX2lkGAIgASgJEjEKDmF0dGFj",
            "a19hY3Rpb25zGAMgAygLMhkuRGF0YS5CYXR0bGUuQmF0dGxlQWN0aW9uEjkK",
            "Fmxhc3RfcmV0cmlldmVkX2FjdGlvbnMYBCABKAsyGS5EYXRhLkJhdHRsZS5C",
            "YXR0bGVBY3Rpb24SFwoPcGxheWVyX2xhdGl0dWRlGAUgASgBEhgKEHBsYXll",
            "cl9sb25naXR1ZGUYBiABKAFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Data.Battle.BattleActionReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Networking.Requests.Messages.AttackGymMessage), global::Networking.Requests.Messages.AttackGymMessage.Parser, new[]{ "GymId", "BattleId", "AttackActions", "LastRetrievedActions", "PlayerLatitude", "PlayerLongitude" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class AttackGymMessage : pb::IMessage<AttackGymMessage> {
    private static readonly pb::MessageParser<AttackGymMessage> _parser = new pb::MessageParser<AttackGymMessage>(() => new AttackGymMessage());
    public static pb::MessageParser<AttackGymMessage> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Networking.Requests.Messages.AttackGymMessageReflection.Descriptor.MessageTypes[0]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public AttackGymMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    public AttackGymMessage(AttackGymMessage other) : this() {
      gymId_ = other.gymId_;
      battleId_ = other.battleId_;
      attackActions_ = other.attackActions_.Clone();
      LastRetrievedActions = other.lastRetrievedActions_ != null ? other.LastRetrievedActions.Clone() : null;
      playerLatitude_ = other.playerLatitude_;
      playerLongitude_ = other.playerLongitude_;
    }

    public AttackGymMessage Clone() {
      return new AttackGymMessage(this);
    }

    /// <summary>Field number for the "gym_id" field.</summary>
    public const int GymIdFieldNumber = 1;
    private string gymId_ = "";
    public string GymId {
      get { return gymId_; }
      set {
        gymId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "battle_id" field.</summary>
    public const int BattleIdFieldNumber = 2;
    private string battleId_ = "";
    public string BattleId {
      get { return battleId_; }
      set {
        battleId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "attack_actions" field.</summary>
    public const int AttackActionsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Data.Battle.BattleAction> _repeated_attackActions_codec
        = pb::FieldCodec.ForMessage(26, global::Data.Battle.BattleAction.Parser);
    private readonly pbc::RepeatedField<global::Data.Battle.BattleAction> attackActions_ = new pbc::RepeatedField<global::Data.Battle.BattleAction>();
    public pbc::RepeatedField<global::Data.Battle.BattleAction> AttackActions {
      get { return attackActions_; }
    }

    /// <summary>Field number for the "last_retrieved_actions" field.</summary>
    public const int LastRetrievedActionsFieldNumber = 4;
    private global::Data.Battle.BattleAction lastRetrievedActions_;
    public global::Data.Battle.BattleAction LastRetrievedActions {
      get { return lastRetrievedActions_; }
      set {
        lastRetrievedActions_ = value;
      }
    }

    /// <summary>Field number for the "player_latitude" field.</summary>
    public const int PlayerLatitudeFieldNumber = 5;
    private double playerLatitude_;
    public double PlayerLatitude {
      get { return playerLatitude_; }
      set {
        playerLatitude_ = value;
      }
    }

    /// <summary>Field number for the "player_longitude" field.</summary>
    public const int PlayerLongitudeFieldNumber = 6;
    private double playerLongitude_;
    public double PlayerLongitude {
      get { return playerLongitude_; }
      set {
        playerLongitude_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as AttackGymMessage);
    }

    public bool Equals(AttackGymMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GymId != other.GymId) return false;
      if (BattleId != other.BattleId) return false;
      if(!attackActions_.Equals(other.attackActions_)) return false;
      if (!object.Equals(LastRetrievedActions, other.LastRetrievedActions)) return false;
      if (PlayerLatitude != other.PlayerLatitude) return false;
      if (PlayerLongitude != other.PlayerLongitude) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (GymId.Length != 0) hash ^= GymId.GetHashCode();
      if (BattleId.Length != 0) hash ^= BattleId.GetHashCode();
      hash ^= attackActions_.GetHashCode();
      if (lastRetrievedActions_ != null) hash ^= LastRetrievedActions.GetHashCode();
      if (PlayerLatitude != 0D) hash ^= PlayerLatitude.GetHashCode();
      if (PlayerLongitude != 0D) hash ^= PlayerLongitude.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (GymId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(GymId);
      }
      if (BattleId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(BattleId);
      }
      attackActions_.WriteTo(output, _repeated_attackActions_codec);
      if (lastRetrievedActions_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(LastRetrievedActions);
      }
      if (PlayerLatitude != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(PlayerLatitude);
      }
      if (PlayerLongitude != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(PlayerLongitude);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (GymId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GymId);
      }
      if (BattleId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BattleId);
      }
      size += attackActions_.CalculateSize(_repeated_attackActions_codec);
      if (lastRetrievedActions_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LastRetrievedActions);
      }
      if (PlayerLatitude != 0D) {
        size += 1 + 8;
      }
      if (PlayerLongitude != 0D) {
        size += 1 + 8;
      }
      return size;
    }

    public void MergeFrom(AttackGymMessage other) {
      if (other == null) {
        return;
      }
      if (other.GymId.Length != 0) {
        GymId = other.GymId;
      }
      if (other.BattleId.Length != 0) {
        BattleId = other.BattleId;
      }
      attackActions_.Add(other.attackActions_);
      if (other.lastRetrievedActions_ != null) {
        if (lastRetrievedActions_ == null) {
          lastRetrievedActions_ = new global::Data.Battle.BattleAction();
        }
        LastRetrievedActions.MergeFrom(other.LastRetrievedActions);
      }
      if (other.PlayerLatitude != 0D) {
        PlayerLatitude = other.PlayerLatitude;
      }
      if (other.PlayerLongitude != 0D) {
        PlayerLongitude = other.PlayerLongitude;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            GymId = input.ReadString();
            break;
          }
          case 18: {
            BattleId = input.ReadString();
            break;
          }
          case 26: {
            attackActions_.AddEntriesFrom(input, _repeated_attackActions_codec);
            break;
          }
          case 34: {
            if (lastRetrievedActions_ == null) {
              lastRetrievedActions_ = new global::Data.Battle.BattleAction();
            }
            input.ReadMessage(lastRetrievedActions_);
            break;
          }
          case 41: {
            PlayerLatitude = input.ReadDouble();
            break;
          }
          case 49: {
            PlayerLongitude = input.ReadDouble();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
