// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Networking/Envelopes/ResponseEnvelope.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Networking.Envelopes {

  /// <summary>Holder for reflection information generated from Networking/Envelopes/ResponseEnvelope.proto</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class ResponseEnvelopeReflection {

    #region Descriptor
    /// <summary>File descriptor for Networking/Envelopes/ResponseEnvelope.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ResponseEnvelopeReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CitOZXR3b3JraW5nL0VudmVsb3Blcy9SZXNwb25zZUVudmVsb3BlLnByb3Rv",
            "EhROZXR3b3JraW5nLkVudmVsb3BlcxolTmV0d29ya2luZy9FbnZlbG9wZXMv",
            "QXV0aFRpY2tldC5wcm90bxorTmV0d29ya2luZy9FbnZlbG9wZXMvVW5rbm93",
            "bjZSZXNwb25zZS5wcm90byKiAgoQUmVzcG9uc2VFbnZlbG9wZRITCgtzdGF0",
            "dXNfY29kZRgBIAEoBRISCgpyZXF1ZXN0X2lkGAIgASgEEg8KB2FwaV91cmwY",
            "AyABKAkSOAoIdW5rbm93bjYYBiABKAsyJi5OZXR3b3JraW5nLkVudmVsb3Bl",
            "cy5Vbmtub3duNlJlc3BvbnNlEjUKC2F1dGhfdGlja2V0GAcgASgLMiAuTmV0",
            "d29ya2luZy5FbnZlbG9wZXMuQXV0aFRpY2tldBIPCgdyZXR1cm5zGGQgAygM",
            "Eg0KBWVycm9yGGUgASgJGkMKCFVua25vd243EhEKCXVua25vd243MRgBIAEo",
            "DBIRCgl1bmtub3duNzIYAiABKAMSEQoJdW5rbm93bjczGAMgASgMYgZwcm90",
            "bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Networking.Envelopes.AuthTicketReflection.Descriptor, global::Networking.Envelopes.Unknown6ResponseReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Networking.Envelopes.ResponseEnvelope), global::Networking.Envelopes.ResponseEnvelope.Parser, new[]{ "StatusCode", "RequestId", "ApiUrl", "Unknown6", "AuthTicket", "Returns", "Error" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Networking.Envelopes.ResponseEnvelope.Types.Unknown7), global::Networking.Envelopes.ResponseEnvelope.Types.Unknown7.Parser, new[]{ "Unknown71", "Unknown72", "Unknown73" }, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ResponseEnvelope : pb::IMessage<ResponseEnvelope> {
    private static readonly pb::MessageParser<ResponseEnvelope> _parser = new pb::MessageParser<ResponseEnvelope>(() => new ResponseEnvelope());
    public static pb::MessageParser<ResponseEnvelope> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Networking.Envelopes.ResponseEnvelopeReflection.Descriptor.MessageTypes[0]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public ResponseEnvelope() {
      OnConstruction();
    }

    partial void OnConstruction();

    public ResponseEnvelope(ResponseEnvelope other) : this() {
      statusCode_ = other.statusCode_;
      requestId_ = other.requestId_;
      apiUrl_ = other.apiUrl_;
      Unknown6 = other.unknown6_ != null ? other.Unknown6.Clone() : null;
      AuthTicket = other.authTicket_ != null ? other.AuthTicket.Clone() : null;
      returns_ = other.returns_.Clone();
      error_ = other.error_;
    }

    public ResponseEnvelope Clone() {
      return new ResponseEnvelope(this);
    }

    /// <summary>Field number for the "status_code" field.</summary>
    public const int StatusCodeFieldNumber = 1;
    private int statusCode_;
    public int StatusCode {
      get { return statusCode_; }
      set {
        statusCode_ = value;
      }
    }

    /// <summary>Field number for the "request_id" field.</summary>
    public const int RequestIdFieldNumber = 2;
    private ulong requestId_;
    public ulong RequestId {
      get { return requestId_; }
      set {
        requestId_ = value;
      }
    }

    /// <summary>Field number for the "api_url" field.</summary>
    public const int ApiUrlFieldNumber = 3;
    private string apiUrl_ = "";
    public string ApiUrl {
      get { return apiUrl_; }
      set {
        apiUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "unknown6" field.</summary>
    public const int Unknown6FieldNumber = 6;
    private global::Networking.Envelopes.Unknown6Response unknown6_;
    public global::Networking.Envelopes.Unknown6Response Unknown6 {
      get { return unknown6_; }
      set {
        unknown6_ = value;
      }
    }

    /// <summary>Field number for the "auth_ticket" field.</summary>
    public const int AuthTicketFieldNumber = 7;
    private global::Networking.Envelopes.AuthTicket authTicket_;
    public global::Networking.Envelopes.AuthTicket AuthTicket {
      get { return authTicket_; }
      set {
        authTicket_ = value;
      }
    }

    /// <summary>Field number for the "returns" field.</summary>
    public const int ReturnsFieldNumber = 100;
    private static readonly pb::FieldCodec<pb::ByteString> _repeated_returns_codec
        = pb::FieldCodec.ForBytes(802);
    private readonly pbc::RepeatedField<pb::ByteString> returns_ = new pbc::RepeatedField<pb::ByteString>();
    public pbc::RepeatedField<pb::ByteString> Returns {
      get { return returns_; }
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 101;
    private string error_ = "";
    public string Error {
      get { return error_; }
      set {
        error_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    public override bool Equals(object other) {
      return Equals(other as ResponseEnvelope);
    }

    public bool Equals(ResponseEnvelope other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StatusCode != other.StatusCode) return false;
      if (RequestId != other.RequestId) return false;
      if (ApiUrl != other.ApiUrl) return false;
      if (!object.Equals(Unknown6, other.Unknown6)) return false;
      if (!object.Equals(AuthTicket, other.AuthTicket)) return false;
      if(!returns_.Equals(other.returns_)) return false;
      if (Error != other.Error) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (StatusCode != 0) hash ^= StatusCode.GetHashCode();
      if (RequestId != 0UL) hash ^= RequestId.GetHashCode();
      if (ApiUrl.Length != 0) hash ^= ApiUrl.GetHashCode();
      if (unknown6_ != null) hash ^= Unknown6.GetHashCode();
      if (authTicket_ != null) hash ^= AuthTicket.GetHashCode();
      hash ^= returns_.GetHashCode();
      if (Error.Length != 0) hash ^= Error.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (StatusCode != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(StatusCode);
      }
      if (RequestId != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(RequestId);
      }
      if (ApiUrl.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ApiUrl);
      }
      if (unknown6_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Unknown6);
      }
      if (authTicket_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(AuthTicket);
      }
      returns_.WriteTo(output, _repeated_returns_codec);
      if (Error.Length != 0) {
        output.WriteRawTag(170, 6);
        output.WriteString(Error);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (StatusCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StatusCode);
      }
      if (RequestId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(RequestId);
      }
      if (ApiUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ApiUrl);
      }
      if (unknown6_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Unknown6);
      }
      if (authTicket_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AuthTicket);
      }
      size += returns_.CalculateSize(_repeated_returns_codec);
      if (Error.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Error);
      }
      return size;
    }

    public void MergeFrom(ResponseEnvelope other) {
      if (other == null) {
        return;
      }
      if (other.StatusCode != 0) {
        StatusCode = other.StatusCode;
      }
      if (other.RequestId != 0UL) {
        RequestId = other.RequestId;
      }
      if (other.ApiUrl.Length != 0) {
        ApiUrl = other.ApiUrl;
      }
      if (other.unknown6_ != null) {
        if (unknown6_ == null) {
          unknown6_ = new global::Networking.Envelopes.Unknown6Response();
        }
        Unknown6.MergeFrom(other.Unknown6);
      }
      if (other.authTicket_ != null) {
        if (authTicket_ == null) {
          authTicket_ = new global::Networking.Envelopes.AuthTicket();
        }
        AuthTicket.MergeFrom(other.AuthTicket);
      }
      returns_.Add(other.returns_);
      if (other.Error.Length != 0) {
        Error = other.Error;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            StatusCode = input.ReadInt32();
            break;
          }
          case 16: {
            RequestId = input.ReadUInt64();
            break;
          }
          case 26: {
            ApiUrl = input.ReadString();
            break;
          }
          case 50: {
            if (unknown6_ == null) {
              unknown6_ = new global::Networking.Envelopes.Unknown6Response();
            }
            input.ReadMessage(unknown6_);
            break;
          }
          case 58: {
            if (authTicket_ == null) {
              authTicket_ = new global::Networking.Envelopes.AuthTicket();
            }
            input.ReadMessage(authTicket_);
            break;
          }
          case 802: {
            returns_.AddEntriesFrom(input, _repeated_returns_codec);
            break;
          }
          case 810: {
            Error = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the ResponseEnvelope message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Unknown7 : pb::IMessage<Unknown7> {
        private static readonly pb::MessageParser<Unknown7> _parser = new pb::MessageParser<Unknown7>(() => new Unknown7());
        public static pb::MessageParser<Unknown7> Parser { get { return _parser; } }

        public static pbr::MessageDescriptor Descriptor {
          get { return global::Networking.Envelopes.ResponseEnvelope.Descriptor.NestedTypes[0]; }
        }

        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        public Unknown7() {
          OnConstruction();
        }

        partial void OnConstruction();

        public Unknown7(Unknown7 other) : this() {
          unknown71_ = other.unknown71_;
          unknown72_ = other.unknown72_;
          unknown73_ = other.unknown73_;
        }

        public Unknown7 Clone() {
          return new Unknown7(this);
        }

        /// <summary>Field number for the "unknown71" field.</summary>
        public const int Unknown71FieldNumber = 1;
        private pb::ByteString unknown71_ = pb::ByteString.Empty;
        public pb::ByteString Unknown71 {
          get { return unknown71_; }
          set {
            unknown71_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "unknown72" field.</summary>
        public const int Unknown72FieldNumber = 2;
        private long unknown72_;
        public long Unknown72 {
          get { return unknown72_; }
          set {
            unknown72_ = value;
          }
        }

        /// <summary>Field number for the "unknown73" field.</summary>
        public const int Unknown73FieldNumber = 3;
        private pb::ByteString unknown73_ = pb::ByteString.Empty;
        public pb::ByteString Unknown73 {
          get { return unknown73_; }
          set {
            unknown73_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        public override bool Equals(object other) {
          return Equals(other as Unknown7);
        }

        public bool Equals(Unknown7 other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Unknown71 != other.Unknown71) return false;
          if (Unknown72 != other.Unknown72) return false;
          if (Unknown73 != other.Unknown73) return false;
          return true;
        }

        public override int GetHashCode() {
          int hash = 1;
          if (Unknown71.Length != 0) hash ^= Unknown71.GetHashCode();
          if (Unknown72 != 0L) hash ^= Unknown72.GetHashCode();
          if (Unknown73.Length != 0) hash ^= Unknown73.GetHashCode();
          return hash;
        }

        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        public void WriteTo(pb::CodedOutputStream output) {
          if (Unknown71.Length != 0) {
            output.WriteRawTag(10);
            output.WriteBytes(Unknown71);
          }
          if (Unknown72 != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(Unknown72);
          }
          if (Unknown73.Length != 0) {
            output.WriteRawTag(26);
            output.WriteBytes(Unknown73);
          }
        }

        public int CalculateSize() {
          int size = 0;
          if (Unknown71.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(Unknown71);
          }
          if (Unknown72 != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(Unknown72);
          }
          if (Unknown73.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(Unknown73);
          }
          return size;
        }

        public void MergeFrom(Unknown7 other) {
          if (other == null) {
            return;
          }
          if (other.Unknown71.Length != 0) {
            Unknown71 = other.Unknown71;
          }
          if (other.Unknown72 != 0L) {
            Unknown72 = other.Unknown72;
          }
          if (other.Unknown73.Length != 0) {
            Unknown73 = other.Unknown73;
          }
        }

        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                input.SkipLastField();
                break;
              case 10: {
                Unknown71 = input.ReadBytes();
                break;
              }
              case 16: {
                Unknown72 = input.ReadInt64();
                break;
              }
              case 26: {
                Unknown73 = input.ReadBytes();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
