// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Networking/Responses/DownloadItemTemplatesResponse.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace PokemonGoDesktop.API.Proto {

  /// <summary>Holder for reflection information generated from Networking/Responses/DownloadItemTemplatesResponse.proto</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class DownloadItemTemplatesResponseReflection {

    #region Descriptor
    /// <summary>File descriptor for Networking/Responses/DownloadItemTemplatesResponse.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DownloadItemTemplatesResponseReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjhOZXR3b3JraW5nL1Jlc3BvbnNlcy9Eb3dubG9hZEl0ZW1UZW1wbGF0ZXNS",
            "ZXNwb25zZS5wcm90bxIUTmV0d29ya2luZy5SZXNwb25zZXMaIlNldHRpbmdz",
            "L01hc3Rlci9JdGVtU2V0dGluZ3MucHJvdG8aIlNldHRpbmdzL01hc3Rlci9N",
            "b3ZlU2V0dGluZ3MucHJvdG8aI1NldHRpbmdzL01hc3Rlci9CYWRnZVNldHRp",
            "bmdzLnByb3RvGiVTZXR0aW5ncy9NYXN0ZXIvUG9rZW1vblNldHRpbmdzLnBy",
            "b3RvGipTZXR0aW5ncy9NYXN0ZXIvTW92ZVNlcXVlbmNlU2V0dGluZ3MucHJv",
            "dG8aK1NldHRpbmdzL01hc3Rlci9UeXBlRWZmZWN0aXZlU2V0dGluZ3MucHJv",
            "dG8aJFNldHRpbmdzL01hc3Rlci9DYW1lcmFTZXR0aW5ncy5wcm90bxopU2V0",
            "dGluZ3MvTWFzdGVyL1BsYXllckxldmVsU2V0dGluZ3MucHJvdG8aJlNldHRp",
            "bmdzL01hc3Rlci9HeW1MZXZlbFNldHRpbmdzLnByb3RvGidTZXR0aW5ncy9N",
            "YXN0ZXIvR3ltQmF0dGxlU2V0dGluZ3MucHJvdG8aJ1NldHRpbmdzL01hc3Rl",
            "ci9FbmNvdW50ZXJTZXR0aW5ncy5wcm90bxokU2V0dGluZ3MvTWFzdGVyL0lh",
            "cEl0ZW1EaXNwbGF5LnByb3RvGiFTZXR0aW5ncy9NYXN0ZXIvSWFwU2V0dGlu",
            "Z3MucHJvdG8aLFNldHRpbmdzL01hc3Rlci9Qb2tlbW9uVXBncmFkZVNldHRp",
            "bmdzLnByb3RvGitTZXR0aW5ncy9NYXN0ZXIvRXF1aXBwZWRCYWRnZVNldHRp",
            "bmdzLnByb3RvIsAICh1Eb3dubG9hZEl0ZW1UZW1wbGF0ZXNSZXNwb25zZRIP",
            "CgdzdWNjZXNzGAEgASgIElgKDml0ZW1fdGVtcGxhdGVzGAIgAygLMkAuTmV0",
            "d29ya2luZy5SZXNwb25zZXMuRG93bmxvYWRJdGVtVGVtcGxhdGVzUmVzcG9u",
            "c2UuSXRlbVRlbXBsYXRlEhQKDHRpbWVzdGFtcF9tcxgDIAEoBBqdBwoMSXRl",
            "bVRlbXBsYXRlEhMKC3RlbXBsYXRlX2lkGAEgASgJEjoKEHBva2Vtb25fc2V0",
            "dGluZ3MYAiABKAsyIC5TZXR0aW5ncy5NYXN0ZXIuUG9rZW1vblNldHRpbmdz",
            "EjQKDWl0ZW1fc2V0dGluZ3MYAyABKAsyHS5TZXR0aW5ncy5NYXN0ZXIuSXRl",
            "bVNldHRpbmdzEjQKDW1vdmVfc2V0dGluZ3MYBCABKAsyHS5TZXR0aW5ncy5N",
            "YXN0ZXIuTW92ZVNldHRpbmdzEkUKFm1vdmVfc2VxdWVuY2Vfc2V0dGluZ3MY",
            "BSABKAsyJS5TZXR0aW5ncy5NYXN0ZXIuTW92ZVNlcXVlbmNlU2V0dGluZ3MS",
            "PgoOdHlwZV9lZmZlY3RpdmUYCCABKAsyJi5TZXR0aW5ncy5NYXN0ZXIuVHlw",
            "ZUVmZmVjdGl2ZVNldHRpbmdzEjYKDmJhZGdlX3NldHRpbmdzGAogASgLMh4u",
            "U2V0dGluZ3MuTWFzdGVyLkJhZGdlU2V0dGluZ3MSLwoGY2FtZXJhGAsgASgL",
            "Mh8uU2V0dGluZ3MuTWFzdGVyLkNhbWVyYVNldHRpbmdzEjoKDHBsYXllcl9s",
            "ZXZlbBgMIAEoCzIkLlNldHRpbmdzLk1hc3Rlci5QbGF5ZXJMZXZlbFNldHRp",
            "bmdzEjQKCWd5bV9sZXZlbBgNIAEoCzIhLlNldHRpbmdzLk1hc3Rlci5HeW1M",
            "ZXZlbFNldHRpbmdzEjsKD2JhdHRsZV9zZXR0aW5ncxgOIAEoCzIiLlNldHRp",
            "bmdzLk1hc3Rlci5HeW1CYXR0bGVTZXR0aW5ncxI+ChJlbmNvdW50ZXJfc2V0",
            "dGluZ3MYDyABKAsyIi5TZXR0aW5ncy5NYXN0ZXIuRW5jb3VudGVyU2V0dGlu",
            "Z3MSOQoQaWFwX2l0ZW1fZGlzcGxheRgQIAEoCzIfLlNldHRpbmdzLk1hc3Rl",
            "ci5JYXBJdGVtRGlzcGxheRIyCgxpYXBfc2V0dGluZ3MYESABKAsyHC5TZXR0",
            "aW5ncy5NYXN0ZXIuSWFwU2V0dGluZ3MSQQoQcG9rZW1vbl91cGdyYWRlcxgS",
            "IAEoCzInLlNldHRpbmdzLk1hc3Rlci5Qb2tlbW9uVXBncmFkZVNldHRpbmdz",
            "Ej8KD2VxdWlwcGVkX2JhZGdlcxgTIAEoCzImLlNldHRpbmdzLk1hc3Rlci5F",
            "cXVpcHBlZEJhZGdlU2V0dGluZ3NCHaoCGlBva2Vtb25Hb0Rlc2t0b3AuQVBJ",
            "LlByb3RvYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::PokemonGoDesktop.API.Proto.ItemSettingsReflection.Descriptor, global::PokemonGoDesktop.API.Proto.MoveSettingsReflection.Descriptor, global::PokemonGoDesktop.API.Proto.BadgeSettingsReflection.Descriptor, global::PokemonGoDesktop.API.Proto.PokemonSettingsReflection.Descriptor, global::PokemonGoDesktop.API.Proto.MoveSequenceSettingsReflection.Descriptor, global::PokemonGoDesktop.API.Proto.TypeEffectiveSettingsReflection.Descriptor, global::PokemonGoDesktop.API.Proto.CameraSettingsReflection.Descriptor, global::PokemonGoDesktop.API.Proto.PlayerLevelSettingsReflection.Descriptor, global::PokemonGoDesktop.API.Proto.GymLevelSettingsReflection.Descriptor, global::PokemonGoDesktop.API.Proto.GymBattleSettingsReflection.Descriptor, global::PokemonGoDesktop.API.Proto.EncounterSettingsReflection.Descriptor, global::PokemonGoDesktop.API.Proto.IapItemDisplayReflection.Descriptor, global::PokemonGoDesktop.API.Proto.IapSettingsReflection.Descriptor, global::PokemonGoDesktop.API.Proto.PokemonUpgradeSettingsReflection.Descriptor, global::PokemonGoDesktop.API.Proto.EquippedBadgeSettingsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::PokemonGoDesktop.API.Proto.DownloadItemTemplatesResponse), global::PokemonGoDesktop.API.Proto.DownloadItemTemplatesResponse.Parser, new[]{ "Success", "ItemTemplates", "TimestampMs" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::PokemonGoDesktop.API.Proto.DownloadItemTemplatesResponse.Types.ItemTemplate), global::PokemonGoDesktop.API.Proto.DownloadItemTemplatesResponse.Types.ItemTemplate.Parser, new[]{ "TemplateId", "PokemonSettings", "ItemSettings", "MoveSettings", "MoveSequenceSettings", "TypeEffective", "BadgeSettings", "Camera", "PlayerLevel", "GymLevel", "BattleSettings", "EncounterSettings", "IapItemDisplay", "IapSettings", "PokemonUpgrades", "EquippedBadges" }, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DownloadItemTemplatesResponse : pb::IMessage<DownloadItemTemplatesResponse> {
    private static readonly pb::MessageParser<DownloadItemTemplatesResponse> _parser = new pb::MessageParser<DownloadItemTemplatesResponse>(() => new DownloadItemTemplatesResponse());
    public static pb::MessageParser<DownloadItemTemplatesResponse> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::PokemonGoDesktop.API.Proto.DownloadItemTemplatesResponseReflection.Descriptor.MessageTypes[0]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public DownloadItemTemplatesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    public DownloadItemTemplatesResponse(DownloadItemTemplatesResponse other) : this() {
      success_ = other.success_;
      itemTemplates_ = other.itemTemplates_.Clone();
      timestampMs_ = other.timestampMs_;
    }

    public DownloadItemTemplatesResponse Clone() {
      return new DownloadItemTemplatesResponse(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private bool success_;
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    /// <summary>Field number for the "item_templates" field.</summary>
    public const int ItemTemplatesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::PokemonGoDesktop.API.Proto.DownloadItemTemplatesResponse.Types.ItemTemplate> _repeated_itemTemplates_codec
        = pb::FieldCodec.ForMessage(18, global::PokemonGoDesktop.API.Proto.DownloadItemTemplatesResponse.Types.ItemTemplate.Parser);
    private readonly pbc::RepeatedField<global::PokemonGoDesktop.API.Proto.DownloadItemTemplatesResponse.Types.ItemTemplate> itemTemplates_ = new pbc::RepeatedField<global::PokemonGoDesktop.API.Proto.DownloadItemTemplatesResponse.Types.ItemTemplate>();
    public pbc::RepeatedField<global::PokemonGoDesktop.API.Proto.DownloadItemTemplatesResponse.Types.ItemTemplate> ItemTemplates {
      get { return itemTemplates_; }
    }

    /// <summary>Field number for the "timestamp_ms" field.</summary>
    public const int TimestampMsFieldNumber = 3;
    private ulong timestampMs_;
    public ulong TimestampMs {
      get { return timestampMs_; }
      set {
        timestampMs_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as DownloadItemTemplatesResponse);
    }

    public bool Equals(DownloadItemTemplatesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      if(!itemTemplates_.Equals(other.itemTemplates_)) return false;
      if (TimestampMs != other.TimestampMs) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (Success != false) hash ^= Success.GetHashCode();
      hash ^= itemTemplates_.GetHashCode();
      if (TimestampMs != 0UL) hash ^= TimestampMs.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      itemTemplates_.WriteTo(output, _repeated_itemTemplates_codec);
      if (TimestampMs != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(TimestampMs);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (Success != false) {
        size += 1 + 1;
      }
      size += itemTemplates_.CalculateSize(_repeated_itemTemplates_codec);
      if (TimestampMs != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(TimestampMs);
      }
      return size;
    }

    public void MergeFrom(DownloadItemTemplatesResponse other) {
      if (other == null) {
        return;
      }
      if (other.Success != false) {
        Success = other.Success;
      }
      itemTemplates_.Add(other.itemTemplates_);
      if (other.TimestampMs != 0UL) {
        TimestampMs = other.TimestampMs;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
          case 18: {
            itemTemplates_.AddEntriesFrom(input, _repeated_itemTemplates_codec);
            break;
          }
          case 24: {
            TimestampMs = input.ReadUInt64();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the DownloadItemTemplatesResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class ItemTemplate : pb::IMessage<ItemTemplate> {
        private static readonly pb::MessageParser<ItemTemplate> _parser = new pb::MessageParser<ItemTemplate>(() => new ItemTemplate());
        public static pb::MessageParser<ItemTemplate> Parser { get { return _parser; } }

        public static pbr::MessageDescriptor Descriptor {
          get { return global::PokemonGoDesktop.API.Proto.DownloadItemTemplatesResponse.Descriptor.NestedTypes[0]; }
        }

        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        public ItemTemplate() {
          OnConstruction();
        }

        partial void OnConstruction();

        public ItemTemplate(ItemTemplate other) : this() {
          templateId_ = other.templateId_;
          PokemonSettings = other.pokemonSettings_ != null ? other.PokemonSettings.Clone() : null;
          ItemSettings = other.itemSettings_ != null ? other.ItemSettings.Clone() : null;
          MoveSettings = other.moveSettings_ != null ? other.MoveSettings.Clone() : null;
          MoveSequenceSettings = other.moveSequenceSettings_ != null ? other.MoveSequenceSettings.Clone() : null;
          TypeEffective = other.typeEffective_ != null ? other.TypeEffective.Clone() : null;
          BadgeSettings = other.badgeSettings_ != null ? other.BadgeSettings.Clone() : null;
          Camera = other.camera_ != null ? other.Camera.Clone() : null;
          PlayerLevel = other.playerLevel_ != null ? other.PlayerLevel.Clone() : null;
          GymLevel = other.gymLevel_ != null ? other.GymLevel.Clone() : null;
          BattleSettings = other.battleSettings_ != null ? other.BattleSettings.Clone() : null;
          EncounterSettings = other.encounterSettings_ != null ? other.EncounterSettings.Clone() : null;
          IapItemDisplay = other.iapItemDisplay_ != null ? other.IapItemDisplay.Clone() : null;
          IapSettings = other.iapSettings_ != null ? other.IapSettings.Clone() : null;
          PokemonUpgrades = other.pokemonUpgrades_ != null ? other.PokemonUpgrades.Clone() : null;
          EquippedBadges = other.equippedBadges_ != null ? other.EquippedBadges.Clone() : null;
        }

        public ItemTemplate Clone() {
          return new ItemTemplate(this);
        }

        /// <summary>Field number for the "template_id" field.</summary>
        public const int TemplateIdFieldNumber = 1;
        private string templateId_ = "";
        public string TemplateId {
          get { return templateId_; }
          set {
            templateId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "pokemon_settings" field.</summary>
        public const int PokemonSettingsFieldNumber = 2;
        private global::PokemonGoDesktop.API.Proto.PokemonSettings pokemonSettings_;
        public global::PokemonGoDesktop.API.Proto.PokemonSettings PokemonSettings {
          get { return pokemonSettings_; }
          set {
            pokemonSettings_ = value;
          }
        }

        /// <summary>Field number for the "item_settings" field.</summary>
        public const int ItemSettingsFieldNumber = 3;
        private global::PokemonGoDesktop.API.Proto.ItemSettings itemSettings_;
        public global::PokemonGoDesktop.API.Proto.ItemSettings ItemSettings {
          get { return itemSettings_; }
          set {
            itemSettings_ = value;
          }
        }

        /// <summary>Field number for the "move_settings" field.</summary>
        public const int MoveSettingsFieldNumber = 4;
        private global::PokemonGoDesktop.API.Proto.MoveSettings moveSettings_;
        public global::PokemonGoDesktop.API.Proto.MoveSettings MoveSettings {
          get { return moveSettings_; }
          set {
            moveSettings_ = value;
          }
        }

        /// <summary>Field number for the "move_sequence_settings" field.</summary>
        public const int MoveSequenceSettingsFieldNumber = 5;
        private global::PokemonGoDesktop.API.Proto.MoveSequenceSettings moveSequenceSettings_;
        public global::PokemonGoDesktop.API.Proto.MoveSequenceSettings MoveSequenceSettings {
          get { return moveSequenceSettings_; }
          set {
            moveSequenceSettings_ = value;
          }
        }

        /// <summary>Field number for the "type_effective" field.</summary>
        public const int TypeEffectiveFieldNumber = 8;
        private global::PokemonGoDesktop.API.Proto.TypeEffectiveSettings typeEffective_;
        public global::PokemonGoDesktop.API.Proto.TypeEffectiveSettings TypeEffective {
          get { return typeEffective_; }
          set {
            typeEffective_ = value;
          }
        }

        /// <summary>Field number for the "badge_settings" field.</summary>
        public const int BadgeSettingsFieldNumber = 10;
        private global::PokemonGoDesktop.API.Proto.BadgeSettings badgeSettings_;
        public global::PokemonGoDesktop.API.Proto.BadgeSettings BadgeSettings {
          get { return badgeSettings_; }
          set {
            badgeSettings_ = value;
          }
        }

        /// <summary>Field number for the "camera" field.</summary>
        public const int CameraFieldNumber = 11;
        private global::PokemonGoDesktop.API.Proto.CameraSettings camera_;
        public global::PokemonGoDesktop.API.Proto.CameraSettings Camera {
          get { return camera_; }
          set {
            camera_ = value;
          }
        }

        /// <summary>Field number for the "player_level" field.</summary>
        public const int PlayerLevelFieldNumber = 12;
        private global::PokemonGoDesktop.API.Proto.PlayerLevelSettings playerLevel_;
        public global::PokemonGoDesktop.API.Proto.PlayerLevelSettings PlayerLevel {
          get { return playerLevel_; }
          set {
            playerLevel_ = value;
          }
        }

        /// <summary>Field number for the "gym_level" field.</summary>
        public const int GymLevelFieldNumber = 13;
        private global::PokemonGoDesktop.API.Proto.GymLevelSettings gymLevel_;
        public global::PokemonGoDesktop.API.Proto.GymLevelSettings GymLevel {
          get { return gymLevel_; }
          set {
            gymLevel_ = value;
          }
        }

        /// <summary>Field number for the "battle_settings" field.</summary>
        public const int BattleSettingsFieldNumber = 14;
        private global::PokemonGoDesktop.API.Proto.GymBattleSettings battleSettings_;
        public global::PokemonGoDesktop.API.Proto.GymBattleSettings BattleSettings {
          get { return battleSettings_; }
          set {
            battleSettings_ = value;
          }
        }

        /// <summary>Field number for the "encounter_settings" field.</summary>
        public const int EncounterSettingsFieldNumber = 15;
        private global::PokemonGoDesktop.API.Proto.EncounterSettings encounterSettings_;
        public global::PokemonGoDesktop.API.Proto.EncounterSettings EncounterSettings {
          get { return encounterSettings_; }
          set {
            encounterSettings_ = value;
          }
        }

        /// <summary>Field number for the "iap_item_display" field.</summary>
        public const int IapItemDisplayFieldNumber = 16;
        private global::PokemonGoDesktop.API.Proto.IapItemDisplay iapItemDisplay_;
        public global::PokemonGoDesktop.API.Proto.IapItemDisplay IapItemDisplay {
          get { return iapItemDisplay_; }
          set {
            iapItemDisplay_ = value;
          }
        }

        /// <summary>Field number for the "iap_settings" field.</summary>
        public const int IapSettingsFieldNumber = 17;
        private global::PokemonGoDesktop.API.Proto.IapSettings iapSettings_;
        public global::PokemonGoDesktop.API.Proto.IapSettings IapSettings {
          get { return iapSettings_; }
          set {
            iapSettings_ = value;
          }
        }

        /// <summary>Field number for the "pokemon_upgrades" field.</summary>
        public const int PokemonUpgradesFieldNumber = 18;
        private global::PokemonGoDesktop.API.Proto.PokemonUpgradeSettings pokemonUpgrades_;
        public global::PokemonGoDesktop.API.Proto.PokemonUpgradeSettings PokemonUpgrades {
          get { return pokemonUpgrades_; }
          set {
            pokemonUpgrades_ = value;
          }
        }

        /// <summary>Field number for the "equipped_badges" field.</summary>
        public const int EquippedBadgesFieldNumber = 19;
        private global::PokemonGoDesktop.API.Proto.EquippedBadgeSettings equippedBadges_;
        public global::PokemonGoDesktop.API.Proto.EquippedBadgeSettings EquippedBadges {
          get { return equippedBadges_; }
          set {
            equippedBadges_ = value;
          }
        }

        public override bool Equals(object other) {
          return Equals(other as ItemTemplate);
        }

        public bool Equals(ItemTemplate other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (TemplateId != other.TemplateId) return false;
          if (!object.Equals(PokemonSettings, other.PokemonSettings)) return false;
          if (!object.Equals(ItemSettings, other.ItemSettings)) return false;
          if (!object.Equals(MoveSettings, other.MoveSettings)) return false;
          if (!object.Equals(MoveSequenceSettings, other.MoveSequenceSettings)) return false;
          if (!object.Equals(TypeEffective, other.TypeEffective)) return false;
          if (!object.Equals(BadgeSettings, other.BadgeSettings)) return false;
          if (!object.Equals(Camera, other.Camera)) return false;
          if (!object.Equals(PlayerLevel, other.PlayerLevel)) return false;
          if (!object.Equals(GymLevel, other.GymLevel)) return false;
          if (!object.Equals(BattleSettings, other.BattleSettings)) return false;
          if (!object.Equals(EncounterSettings, other.EncounterSettings)) return false;
          if (!object.Equals(IapItemDisplay, other.IapItemDisplay)) return false;
          if (!object.Equals(IapSettings, other.IapSettings)) return false;
          if (!object.Equals(PokemonUpgrades, other.PokemonUpgrades)) return false;
          if (!object.Equals(EquippedBadges, other.EquippedBadges)) return false;
          return true;
        }

        public override int GetHashCode() {
          int hash = 1;
          if (TemplateId.Length != 0) hash ^= TemplateId.GetHashCode();
          if (pokemonSettings_ != null) hash ^= PokemonSettings.GetHashCode();
          if (itemSettings_ != null) hash ^= ItemSettings.GetHashCode();
          if (moveSettings_ != null) hash ^= MoveSettings.GetHashCode();
          if (moveSequenceSettings_ != null) hash ^= MoveSequenceSettings.GetHashCode();
          if (typeEffective_ != null) hash ^= TypeEffective.GetHashCode();
          if (badgeSettings_ != null) hash ^= BadgeSettings.GetHashCode();
          if (camera_ != null) hash ^= Camera.GetHashCode();
          if (playerLevel_ != null) hash ^= PlayerLevel.GetHashCode();
          if (gymLevel_ != null) hash ^= GymLevel.GetHashCode();
          if (battleSettings_ != null) hash ^= BattleSettings.GetHashCode();
          if (encounterSettings_ != null) hash ^= EncounterSettings.GetHashCode();
          if (iapItemDisplay_ != null) hash ^= IapItemDisplay.GetHashCode();
          if (iapSettings_ != null) hash ^= IapSettings.GetHashCode();
          if (pokemonUpgrades_ != null) hash ^= PokemonUpgrades.GetHashCode();
          if (equippedBadges_ != null) hash ^= EquippedBadges.GetHashCode();
          return hash;
        }

        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        public void WriteTo(pb::CodedOutputStream output) {
          if (TemplateId.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(TemplateId);
          }
          if (pokemonSettings_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(PokemonSettings);
          }
          if (itemSettings_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(ItemSettings);
          }
          if (moveSettings_ != null) {
            output.WriteRawTag(34);
            output.WriteMessage(MoveSettings);
          }
          if (moveSequenceSettings_ != null) {
            output.WriteRawTag(42);
            output.WriteMessage(MoveSequenceSettings);
          }
          if (typeEffective_ != null) {
            output.WriteRawTag(66);
            output.WriteMessage(TypeEffective);
          }
          if (badgeSettings_ != null) {
            output.WriteRawTag(82);
            output.WriteMessage(BadgeSettings);
          }
          if (camera_ != null) {
            output.WriteRawTag(90);
            output.WriteMessage(Camera);
          }
          if (playerLevel_ != null) {
            output.WriteRawTag(98);
            output.WriteMessage(PlayerLevel);
          }
          if (gymLevel_ != null) {
            output.WriteRawTag(106);
            output.WriteMessage(GymLevel);
          }
          if (battleSettings_ != null) {
            output.WriteRawTag(114);
            output.WriteMessage(BattleSettings);
          }
          if (encounterSettings_ != null) {
            output.WriteRawTag(122);
            output.WriteMessage(EncounterSettings);
          }
          if (iapItemDisplay_ != null) {
            output.WriteRawTag(130, 1);
            output.WriteMessage(IapItemDisplay);
          }
          if (iapSettings_ != null) {
            output.WriteRawTag(138, 1);
            output.WriteMessage(IapSettings);
          }
          if (pokemonUpgrades_ != null) {
            output.WriteRawTag(146, 1);
            output.WriteMessage(PokemonUpgrades);
          }
          if (equippedBadges_ != null) {
            output.WriteRawTag(154, 1);
            output.WriteMessage(EquippedBadges);
          }
        }

        public int CalculateSize() {
          int size = 0;
          if (TemplateId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(TemplateId);
          }
          if (pokemonSettings_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(PokemonSettings);
          }
          if (itemSettings_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(ItemSettings);
          }
          if (moveSettings_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(MoveSettings);
          }
          if (moveSequenceSettings_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(MoveSequenceSettings);
          }
          if (typeEffective_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(TypeEffective);
          }
          if (badgeSettings_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(BadgeSettings);
          }
          if (camera_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Camera);
          }
          if (playerLevel_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerLevel);
          }
          if (gymLevel_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(GymLevel);
          }
          if (battleSettings_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(BattleSettings);
          }
          if (encounterSettings_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(EncounterSettings);
          }
          if (iapItemDisplay_ != null) {
            size += 2 + pb::CodedOutputStream.ComputeMessageSize(IapItemDisplay);
          }
          if (iapSettings_ != null) {
            size += 2 + pb::CodedOutputStream.ComputeMessageSize(IapSettings);
          }
          if (pokemonUpgrades_ != null) {
            size += 2 + pb::CodedOutputStream.ComputeMessageSize(PokemonUpgrades);
          }
          if (equippedBadges_ != null) {
            size += 2 + pb::CodedOutputStream.ComputeMessageSize(EquippedBadges);
          }
          return size;
        }

        public void MergeFrom(ItemTemplate other) {
          if (other == null) {
            return;
          }
          if (other.TemplateId.Length != 0) {
            TemplateId = other.TemplateId;
          }
          if (other.pokemonSettings_ != null) {
            if (pokemonSettings_ == null) {
              pokemonSettings_ = new global::PokemonGoDesktop.API.Proto.PokemonSettings();
            }
            PokemonSettings.MergeFrom(other.PokemonSettings);
          }
          if (other.itemSettings_ != null) {
            if (itemSettings_ == null) {
              itemSettings_ = new global::PokemonGoDesktop.API.Proto.ItemSettings();
            }
            ItemSettings.MergeFrom(other.ItemSettings);
          }
          if (other.moveSettings_ != null) {
            if (moveSettings_ == null) {
              moveSettings_ = new global::PokemonGoDesktop.API.Proto.MoveSettings();
            }
            MoveSettings.MergeFrom(other.MoveSettings);
          }
          if (other.moveSequenceSettings_ != null) {
            if (moveSequenceSettings_ == null) {
              moveSequenceSettings_ = new global::PokemonGoDesktop.API.Proto.MoveSequenceSettings();
            }
            MoveSequenceSettings.MergeFrom(other.MoveSequenceSettings);
          }
          if (other.typeEffective_ != null) {
            if (typeEffective_ == null) {
              typeEffective_ = new global::PokemonGoDesktop.API.Proto.TypeEffectiveSettings();
            }
            TypeEffective.MergeFrom(other.TypeEffective);
          }
          if (other.badgeSettings_ != null) {
            if (badgeSettings_ == null) {
              badgeSettings_ = new global::PokemonGoDesktop.API.Proto.BadgeSettings();
            }
            BadgeSettings.MergeFrom(other.BadgeSettings);
          }
          if (other.camera_ != null) {
            if (camera_ == null) {
              camera_ = new global::PokemonGoDesktop.API.Proto.CameraSettings();
            }
            Camera.MergeFrom(other.Camera);
          }
          if (other.playerLevel_ != null) {
            if (playerLevel_ == null) {
              playerLevel_ = new global::PokemonGoDesktop.API.Proto.PlayerLevelSettings();
            }
            PlayerLevel.MergeFrom(other.PlayerLevel);
          }
          if (other.gymLevel_ != null) {
            if (gymLevel_ == null) {
              gymLevel_ = new global::PokemonGoDesktop.API.Proto.GymLevelSettings();
            }
            GymLevel.MergeFrom(other.GymLevel);
          }
          if (other.battleSettings_ != null) {
            if (battleSettings_ == null) {
              battleSettings_ = new global::PokemonGoDesktop.API.Proto.GymBattleSettings();
            }
            BattleSettings.MergeFrom(other.BattleSettings);
          }
          if (other.encounterSettings_ != null) {
            if (encounterSettings_ == null) {
              encounterSettings_ = new global::PokemonGoDesktop.API.Proto.EncounterSettings();
            }
            EncounterSettings.MergeFrom(other.EncounterSettings);
          }
          if (other.iapItemDisplay_ != null) {
            if (iapItemDisplay_ == null) {
              iapItemDisplay_ = new global::PokemonGoDesktop.API.Proto.IapItemDisplay();
            }
            IapItemDisplay.MergeFrom(other.IapItemDisplay);
          }
          if (other.iapSettings_ != null) {
            if (iapSettings_ == null) {
              iapSettings_ = new global::PokemonGoDesktop.API.Proto.IapSettings();
            }
            IapSettings.MergeFrom(other.IapSettings);
          }
          if (other.pokemonUpgrades_ != null) {
            if (pokemonUpgrades_ == null) {
              pokemonUpgrades_ = new global::PokemonGoDesktop.API.Proto.PokemonUpgradeSettings();
            }
            PokemonUpgrades.MergeFrom(other.PokemonUpgrades);
          }
          if (other.equippedBadges_ != null) {
            if (equippedBadges_ == null) {
              equippedBadges_ = new global::PokemonGoDesktop.API.Proto.EquippedBadgeSettings();
            }
            EquippedBadges.MergeFrom(other.EquippedBadges);
          }
        }

        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                input.SkipLastField();
                break;
              case 10: {
                TemplateId = input.ReadString();
                break;
              }
              case 18: {
                if (pokemonSettings_ == null) {
                  pokemonSettings_ = new global::PokemonGoDesktop.API.Proto.PokemonSettings();
                }
                input.ReadMessage(pokemonSettings_);
                break;
              }
              case 26: {
                if (itemSettings_ == null) {
                  itemSettings_ = new global::PokemonGoDesktop.API.Proto.ItemSettings();
                }
                input.ReadMessage(itemSettings_);
                break;
              }
              case 34: {
                if (moveSettings_ == null) {
                  moveSettings_ = new global::PokemonGoDesktop.API.Proto.MoveSettings();
                }
                input.ReadMessage(moveSettings_);
                break;
              }
              case 42: {
                if (moveSequenceSettings_ == null) {
                  moveSequenceSettings_ = new global::PokemonGoDesktop.API.Proto.MoveSequenceSettings();
                }
                input.ReadMessage(moveSequenceSettings_);
                break;
              }
              case 66: {
                if (typeEffective_ == null) {
                  typeEffective_ = new global::PokemonGoDesktop.API.Proto.TypeEffectiveSettings();
                }
                input.ReadMessage(typeEffective_);
                break;
              }
              case 82: {
                if (badgeSettings_ == null) {
                  badgeSettings_ = new global::PokemonGoDesktop.API.Proto.BadgeSettings();
                }
                input.ReadMessage(badgeSettings_);
                break;
              }
              case 90: {
                if (camera_ == null) {
                  camera_ = new global::PokemonGoDesktop.API.Proto.CameraSettings();
                }
                input.ReadMessage(camera_);
                break;
              }
              case 98: {
                if (playerLevel_ == null) {
                  playerLevel_ = new global::PokemonGoDesktop.API.Proto.PlayerLevelSettings();
                }
                input.ReadMessage(playerLevel_);
                break;
              }
              case 106: {
                if (gymLevel_ == null) {
                  gymLevel_ = new global::PokemonGoDesktop.API.Proto.GymLevelSettings();
                }
                input.ReadMessage(gymLevel_);
                break;
              }
              case 114: {
                if (battleSettings_ == null) {
                  battleSettings_ = new global::PokemonGoDesktop.API.Proto.GymBattleSettings();
                }
                input.ReadMessage(battleSettings_);
                break;
              }
              case 122: {
                if (encounterSettings_ == null) {
                  encounterSettings_ = new global::PokemonGoDesktop.API.Proto.EncounterSettings();
                }
                input.ReadMessage(encounterSettings_);
                break;
              }
              case 130: {
                if (iapItemDisplay_ == null) {
                  iapItemDisplay_ = new global::PokemonGoDesktop.API.Proto.IapItemDisplay();
                }
                input.ReadMessage(iapItemDisplay_);
                break;
              }
              case 138: {
                if (iapSettings_ == null) {
                  iapSettings_ = new global::PokemonGoDesktop.API.Proto.IapSettings();
                }
                input.ReadMessage(iapSettings_);
                break;
              }
              case 146: {
                if (pokemonUpgrades_ == null) {
                  pokemonUpgrades_ = new global::PokemonGoDesktop.API.Proto.PokemonUpgradeSettings();
                }
                input.ReadMessage(pokemonUpgrades_);
                break;
              }
              case 154: {
                if (equippedBadges_ == null) {
                  equippedBadges_ = new global::PokemonGoDesktop.API.Proto.EquippedBadgeSettings();
                }
                input.ReadMessage(equippedBadges_);
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
