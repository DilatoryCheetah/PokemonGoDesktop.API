// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Networking/Responses/EvolvePokemonResponse.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Networking.Responses {

  /// <summary>Holder for reflection information generated from Networking/Responses/EvolvePokemonResponse.proto</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class EvolvePokemonResponseReflection {

    #region Descriptor
    /// <summary>File descriptor for Networking/Responses/EvolvePokemonResponse.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EvolvePokemonResponseReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjBOZXR3b3JraW5nL1Jlc3BvbnNlcy9Fdm9sdmVQb2tlbW9uUmVzcG9uc2Uu",
            "cHJvdG8SFE5ldHdvcmtpbmcuUmVzcG9uc2VzGhZEYXRhL1Bva2Vtb25EYXRh",
            "LnByb3RvIuMCChVFdm9sdmVQb2tlbW9uUmVzcG9uc2USQgoGcmVzdWx0GAEg",
            "ASgOMjIuTmV0d29ya2luZy5SZXNwb25zZXMuRXZvbHZlUG9rZW1vblJlc3Bv",
            "bnNlLlJlc3VsdBIvChRldm9sdmVkX3Bva2Vtb25fZGF0YRgCIAEoCzIRLkRh",
            "dGEuUG9rZW1vbkRhdGESGgoSZXhwZXJpZW5jZV9hd2FyZGVkGAMgASgFEhUK",
            "DWNhbmR5X2F3YXJkZWQYBCABKAUioQEKBlJlc3VsdBIJCgVVTlNFVBAAEgsK",
            "B1NVQ0NFU1MQARIaChZGQUlMRURfUE9LRU1PTl9NSVNTSU5HEAISIQodRkFJ",
            "TEVEX0lOU1VGRklDSUVOVF9SRVNPVVJDRVMQAxIgChxGQUlMRURfUE9LRU1P",
            "Tl9DQU5OT1RfRVZPTFZFEAQSHgoaRkFJTEVEX1BPS0VNT05fSVNfREVQTE9Z",
            "RUQQBWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Data.PokemonDataReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Networking.Responses.EvolvePokemonResponse), global::Networking.Responses.EvolvePokemonResponse.Parser, new[]{ "Result", "EvolvedPokemonData", "ExperienceAwarded", "CandyAwarded" }, null, new[]{ typeof(global::Networking.Responses.EvolvePokemonResponse.Types.Result) }, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class EvolvePokemonResponse : pb::IMessage<EvolvePokemonResponse> {
    private static readonly pb::MessageParser<EvolvePokemonResponse> _parser = new pb::MessageParser<EvolvePokemonResponse>(() => new EvolvePokemonResponse());
    public static pb::MessageParser<EvolvePokemonResponse> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Networking.Responses.EvolvePokemonResponseReflection.Descriptor.MessageTypes[0]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public EvolvePokemonResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    public EvolvePokemonResponse(EvolvePokemonResponse other) : this() {
      result_ = other.result_;
      EvolvedPokemonData = other.evolvedPokemonData_ != null ? other.EvolvedPokemonData.Clone() : null;
      experienceAwarded_ = other.experienceAwarded_;
      candyAwarded_ = other.candyAwarded_;
    }

    public EvolvePokemonResponse Clone() {
      return new EvolvePokemonResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private global::Networking.Responses.EvolvePokemonResponse.Types.Result result_ = 0;
    public global::Networking.Responses.EvolvePokemonResponse.Types.Result Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "evolved_pokemon_data" field.</summary>
    public const int EvolvedPokemonDataFieldNumber = 2;
    private global::Data.PokemonData evolvedPokemonData_;
    public global::Data.PokemonData EvolvedPokemonData {
      get { return evolvedPokemonData_; }
      set {
        evolvedPokemonData_ = value;
      }
    }

    /// <summary>Field number for the "experience_awarded" field.</summary>
    public const int ExperienceAwardedFieldNumber = 3;
    private int experienceAwarded_;
    public int ExperienceAwarded {
      get { return experienceAwarded_; }
      set {
        experienceAwarded_ = value;
      }
    }

    /// <summary>Field number for the "candy_awarded" field.</summary>
    public const int CandyAwardedFieldNumber = 4;
    private int candyAwarded_;
    public int CandyAwarded {
      get { return candyAwarded_; }
      set {
        candyAwarded_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as EvolvePokemonResponse);
    }

    public bool Equals(EvolvePokemonResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (!object.Equals(EvolvedPokemonData, other.EvolvedPokemonData)) return false;
      if (ExperienceAwarded != other.ExperienceAwarded) return false;
      if (CandyAwarded != other.CandyAwarded) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      if (evolvedPokemonData_ != null) hash ^= EvolvedPokemonData.GetHashCode();
      if (ExperienceAwarded != 0) hash ^= ExperienceAwarded.GetHashCode();
      if (CandyAwarded != 0) hash ^= CandyAwarded.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      if (evolvedPokemonData_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(EvolvedPokemonData);
      }
      if (ExperienceAwarded != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ExperienceAwarded);
      }
      if (CandyAwarded != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(CandyAwarded);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      if (evolvedPokemonData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EvolvedPokemonData);
      }
      if (ExperienceAwarded != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ExperienceAwarded);
      }
      if (CandyAwarded != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CandyAwarded);
      }
      return size;
    }

    public void MergeFrom(EvolvePokemonResponse other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
      if (other.evolvedPokemonData_ != null) {
        if (evolvedPokemonData_ == null) {
          evolvedPokemonData_ = new global::Data.PokemonData();
        }
        EvolvedPokemonData.MergeFrom(other.EvolvedPokemonData);
      }
      if (other.ExperienceAwarded != 0) {
        ExperienceAwarded = other.ExperienceAwarded;
      }
      if (other.CandyAwarded != 0) {
        CandyAwarded = other.CandyAwarded;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            result_ = (global::Networking.Responses.EvolvePokemonResponse.Types.Result) input.ReadEnum();
            break;
          }
          case 18: {
            if (evolvedPokemonData_ == null) {
              evolvedPokemonData_ = new global::Data.PokemonData();
            }
            input.ReadMessage(evolvedPokemonData_);
            break;
          }
          case 24: {
            ExperienceAwarded = input.ReadInt32();
            break;
          }
          case 32: {
            CandyAwarded = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the EvolvePokemonResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum Result {
        [pbr::OriginalName("UNSET")] Unset = 0,
        [pbr::OriginalName("SUCCESS")] Success = 1,
        [pbr::OriginalName("FAILED_POKEMON_MISSING")] FailedPokemonMissing = 2,
        [pbr::OriginalName("FAILED_INSUFFICIENT_RESOURCES")] FailedInsufficientResources = 3,
        [pbr::OriginalName("FAILED_POKEMON_CANNOT_EVOLVE")] FailedPokemonCannotEvolve = 4,
        [pbr::OriginalName("FAILED_POKEMON_IS_DEPLOYED")] FailedPokemonIsDeployed = 5,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
